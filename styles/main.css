.hidden {
  display: none;
}

picture img {
  width: 100%;
  height: 100vh;
  object-fit: cover;
}

img {
  width: 100%;
  object-fit: cover;
  display: block;
}

header {
  background-color: #cad3c8;
}

body {
  color: #2c3a47;
  font-family: "Noto Serif", serif;
  line-height: 1.5;
  display: flex;
  flex-direction: column;
  background-color: #cad3c8;
  overflow-x: hidden;
}

h1,
h2,
h3 {
  color: var(--text-color);
  font-family: "EB Garamond", serif;
  line-height: 1;
}

h1 {
  font-size: 3.6em;
}
figure img {
  width: auto;
}

/* This is centering the main area */

main {
  margin: 0 auto;
  max-width: 50rem;
  padding: 0 1rem;
  align-self: center;
}

figure {
  margin: 2rem 0;
}

article {
  margin: 0rem;
}

.full-width {
  position: relative;
  width: 100vw;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  padding: 1rem;
  margin-top: 1rem;
  margin-bottom: 1.5rem;
}

aside {
  background-color: #fd7272;
  color: var(--background-color);
  text-align: center;
  font-size: 2rem;
}

footer {
  color: #2c3a47;
  font-family: "EB Garamond", serif;
  font-size: 2em;
  margin: 0 auto;
  max-width: 50rem;
  padding: 4rem 0 1rem;
}

footer p {
  text-align: center;
}

a:hover {
  background-position: 0 0;
  cursor: pointer;
}

.button {
  padding: 10px 20px;
  font-size: 15px;
  font-family: "EB Garamond", serif;
  background: rgb(0, 204, 255);
  display: inline-block;
  background: linear-gradient(
    to right,
    #f068de 0%,
    #f8b3b5 50%,
    #ffffff 50%,
    #ffffff 100%
  );
  background-size: 200% 100%;
  background-position: 100% 0;
  transition: background-position 0.3s;
  border-radius: 12px;
  border: 2px solid black;
  background-color: white;
  color: black;
}

/* this is the start of the hero overlay and text */
.overlay {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

.hero {
  position: relative;
  height: 50%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}

.hero .overlay {
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), transparent 70%);
}

.hero .text-group {
  text-align: center;
  position: absolute;
  color: #fd7272;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 3rem;
}

.hero h1 {
  font-family: "Noto Serif", serif;
  color: floralwhite;
  font-size: 4em;
}

/* nav */
nav {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  display: none;
  /* margin: 3rem 1.5rem 3rem; */
  background-color: #cad3c8;
  transform: translateX(-100vh);
  transition: 400ms;
  /* padding: 15rem 10rem 0; */
  z-index: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}
.menu-show nav {
  transform: translateX(0);
  /* display: block; */
}

/* end */

nav ul {
  display: flex;
  justify-content: space-evenly;
  flex-direction: column;
  list-style-type: none;
  margin: 0 auto;
  padding: 0;
  max-width: 80rem;
}
nav li {
  display: flex;
  border-bottom: 2px solid black;
}

nav a {
  display: inline-block;
  text-decoration: none;
  background-color: transparent;
  border: none;
  color: #2c3a47;
  padding: 1em;
  text-align: center;
  margin: 4px 2px;
  transition: 0.3s;
  font-size: 30px;
  position: relative;
}

nav a:not([href]) {
  color: #2c3a47;
}

/* end nav */

/* card styles */

.cards {
  display: flex;
  gap: 1rem;
  margin: 3rem 1.5rem 0 1.5rem;
  flex-direction: column;
  margin: 0 1rem;
}

.card {
  position: relative;
  align-items: center;
  margin-bottom: 1rem;
  flex-wrap: nowrap;
}

.card img {
  height: 100%;
  aspect-ratio: 1 / 1;
}

.card .overlay {
  color: #fcfcfc;
  background-color: rgba(0, 0, 0, 0.6);
  font-size: 1.8rem;
  line-height: 1.1;
  padding: 20% 1rem 0;
  margin: 0;
  opacity: 0;
  transition: opacity 300ms ease;
  display: flex;
  justify-content: center;
  align-items: center;
}

.card:hover .overlay {
  opacity: 1;
}
/* form styles */
.form img {
  width: 400px;
}

/* Loader style */

.loader {
  border-radius: 50%;
  width: 8rem;
  height: 8rem;
  border: 16px solid rgba(0, 0, 0, 0.4);
  border-left: 16px solid #e99f9f;
  animation: load 900ms infinite linear;
}

@keyframes load {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Main Menu */
.main-menu .menu-icon {
  position: fixed;
  top: 1.5rem;
  left: 1.5rem;
  width: 60px;
  height: 60px;
  background-color: magenta;
  border-radius: 50%;

  display: flex;
  align-items: center;
  justify-content: center;

  /* brings the menu icon forward */
  z-index: 2;
  /* brings the menu icon forward */
}

.main-menu svg {
  stroke: #2c3a47;
  stroke-width: 4px;
  stroke-linecap: round;
  padding: 12px;
}

.main-menu svg line {
  stroke-linecap: round;
  transform-origin: center;
  transition: transform 200ms ease;
}

.main-menu svg line:first-child {
  transform: translateY(8px);
}

.main-menu svg line:last-child {
  transform: translateY(-8px);
}

.menu-show .menu-icon {
  background-color: #cad3c8;
}
.main-menu .menu-show {
  display: block;
}

.menu-show svg line {
  stroke: #fc427b;
  stroke-width: 5px;
}

.menu-show svg line:first-child {
  transform: rotate(135deg);
}

.menu-show svg line:last-child {
  transform: rotate(-135deg);
}

/* Main Menu end */

/* panels and media queries */

.panel {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}
.panel .image-wrapper {
  order: -1;
}

/* Media Queries */

@media (min-width: 560px) {
  .panel {
    flex-direction: row;
  }

  .panel .text-wrapper {
    flex: 1 1 60%;
  }

  .panel .image-wrapper {
    flex: 1 1 40%;
  }

  .panel h2 {
    margin-top: 4;
  }
  /* card styles  */
  .cards {
    flex-direction: row;
    flex-wrap: wrap;
  }

  .card {
    flex: 1 1 40%;
  }

  /* card styles end */

  /* copied nav */
  nav {
    display: block;
    margin: 3rem 1.5rem 3rem;
    background-color: transparent;
    position: static;
    transform: none;
    padding: 0;
  }

  nav ul {
    display: flex;
    justify-content: space-evenly;
    /* margin: 0 auto; */
    padding: 0;
    max-width: 80rem;
    flex-direction: row;
  }

  nav li {
    display: flex;
    border: none;
  }

  nav a {
    display: block;
    text-decoration: none;
    background-color: transparent;
    border: none;
    color: #2c3a47;
    padding: 16px 32px;
    text-align: center;
    margin: 4px 2px;
    transition: 0.3s;
    font-size: 30px;
    border-radius: 12px;
  }

  nav a:hover {
    background-color: #fd7272;
    opacity: 1;
  }

  .main-menu .menu-icon {
    display: none;
  }
}
/* nav */

@media (min-width: 901px) {
  .hero {
    height: 80vh;
  }
  .hero img {
    height: 100%;
    object-fit: cover;
  }

  .panel .text-wrapper {
    flex: 1 1 50%;
  }

  .panel .image-wrapper {
    flex: 1 1 50%;
    order: 0;
  }
  .panel .left {
    order: -1;
  }

  /* card styles */
  .cards {
    flex-wrap: nowrap;
    max-width: 1600px;
    align-self: center;
  }
  /* card styles */
}

/* Form Start */

h1 {
  display: flex;
  justify-content: center;
}
body {
  display: flex;
  flex-direction: column;
}

section {
  margin: 0 1rem;
  max-width: 30rem;
  align-self: center;
}

form {
  display: grid;
}

/* adding spacing below elements  */

form > input,
textarea,
fieldset {
  margin-bottom: 1.5rem;
}

fieldset {
  display: grid;

  /* condenses rows into smallest possible row */
  grid-template-columns: min-content 1fr;
  grid-column-gap: 0.5rem;
  grid-row-gap: 0.8rem;

  border: none;
  margin: 0;
  padding: 0;
}

legend {
  grid-column: 1 / span 2;
  margin-bottom: 1.5rem;
  line-height: 1.2;
}

/* Checkbox CSS */
:root {
  --checkbox-size: 28px;
  --font-color: #343639;
  --main-color: #fd7272;
}

legend {
  line-height: 1.2;
  grid-column: span 2;
  margin-bottom: 0.6rem;
}

input[type="checkbox"],
input[type="radio"] {
  appearance: none;
  -webkit-appearance: none;

  display: grid;
  align-items: center;
  justify-content: center;

  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border: 2px solid var(--font-color);
  border-radius: 6px;

  transition: background-color 300ms, border-color 300ms, box-shadow 300ms;
}

input[type="radio"] {
  border-radius: 50%;
}

input[type="checkbox"]:hover,
input[type="checkbox"]:focus,
input[type="radio"]:hover,
input[type="radio"]:focus {
  border: 2px solid var(--main-color);
  box-shadow: 0 0 2px var(--main-color);
  outline: none;
}

input[type="checkbox"]:checked {
  border-color: #fff;
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
  border-color: var(--main-color);
}

input[type="checkbox"]:checked:hover,
input[type="checkbox"]:checked:focus {
  border: 2px solid var(--font-color);
  box-shadow: 0 0 3px var(--font-color);
  outline: none;
}

input[type="checkbox"]:checked {
  background-color: var(--main-color);
}

input[type="checkbox"]:checked::after,
input[type="radio"]::after {
  content: "";
  display: block;
  grid-area: 1 / 1 / 2 / 2;
}

input[type="checkbox"]:checked::after {
  width: calc(var(--checkbox-size) / 4);
  height: calc(var(--checkbox-size) / 2);
  border-right: 3px solid #fff;
  border-bottom: 3px solid #fff;
  transform: rotate(38deg);
  margin-bottom: 2px;
}

input[type="radio"]::after {
  width: calc(var(--checkbox-size) - 8px);
  height: calc(var(--checkbox-size) - 8px);
  background-color: var(--main-color);
  border-radius: 50%;

  transform: scale(0);
  transition: transform 300ms;
}

input[type="radio"]:checked::after {
  transform: scale(1);
}

/* Form Checkbox end */

form > input,
textarea,
fieldset,
button {
  margin-bottom: 1.5rem;
}

button {
  justify-self: center;
  border: 1px solid #000;
  color: #000;
  background-color: transparent;
  font-size: 0.8rem;
  padding: 0.3rem 0.5rem;
  transition: background-color 300ms;
}

button:hover {
  background-color: #fd7272;
  color: #fff;
  cursor: pointer;
  border-color: #fd7272;
}

input:hover,
input:focus {
  background-color: #eef1ee;
}

input:focus {
  border-color: transparent;
  box-shadow: 0 0 0 2px hotpink;
  outline: 1px solid limegreen;
}

@media (min-width: 500px) {
  form {
    grid-template-columns: max-content 1fr;
    grid-column-gap: 0.5rem;
    grid-row-gap: 1rem;
    align-items: center;
  }
  form > input {
    margin: 0.5rem 0;
  }

  form > label {
    justify-self: end;
  }

  label[for="haiku"] {
    justify-self: start;
  }

  /* moving everything over */
  fieldset,
  label[for="haiku"],
  textarea,
  button {
    grid-column-start: 2;
  }
  button {
    justify-self: start;
  }
}
